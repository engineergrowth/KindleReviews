services:
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:latest
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-scheduler
      - postgres
      - redis
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./gcp_credentials.json:/opt/airflow/gcp_credentials.json
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: >
      bash -c "
      airflow db upgrade &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
      airflow webserver"

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:latest
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./gcp_credentials.json:/opt/airflow/gcp_credentials.json
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      bash -c "airflow db upgrade &&
               airflow scheduler"
  

  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    restart: always

  dbt:
    image: ghcr.io/dbt-labs/dbt-bigquery:latest
    container_name: dbt
    restart: always
    volumes:
      - ./dbt:/usr/app/dbt
      - ./gcp_credentials.json:/usr/app/dbt/gcp_credentials.json
    working_dir: /usr/app/dbt
    entrypoint: [ "tail", "-f", "/dev/null" ]
    environment:
      - BQ_PROJECT_ID=batch-amazon
      - BQ_DATASET_NAME=kindle_reviews_dataset

volumes:
  postgres_data:
